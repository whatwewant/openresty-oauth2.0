# user nginx;
worker_processes ##WORKER_PROCESSES##;

error_log /dev/stdout info;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

# Mode: development or production
env MODE;

# ROOT URL
env ROOT_URL;

# Provider
env PROVIDER;

# @1 AUTHORIZE INFO
env CLIENT_ID;
env REDIRECT_URI;

# @2 URL INFO
# @2.1 GET AUTHORIZE_URL
#     args: ?client_id=CLIENT_ID&redirect_uri=REDIRECT_URI&response_type=RESPONSE_TYPE&scope=SCOPE&state=xxx
env AUTHORIZE_URL;
env RESPONSE_TYPE; # using to authorize, default: code
env SCOPE;

# @2.2 POST TOKEN_URL
#     body: { client_id, client_secret, redirect_uri, grant_type, code, state }
env TOKEN_URL;
env CLIENT_SECRET;
env GRANT_TYPE; # using to get access token, default: authorization_code

# @2.2.1
env TOKEN_DATA_IN_BODY;
env TOKEN_DATA_IN_BODY_CONTENT_TYPE;
env TOKEN_DATA_IN_QUERY;

# @2.3 GET USER_INFO_URL
#     header: { Authorization: Bearer Token; }
env USER_INFO_URL;

# @2.3.1 Extanble Token in Header, Query, Body
env USER_INFO_HEADER;
env USER_INFO_QUERY;
env USER_INFO_BODY;


# @3 USER FIELD
env USER_USERNAME;
env USER_NICKNAME;
env USER_EMAIL;
env USER_AVATAR;

# @4 Permission
env ALLOW_USERNAMES;

# @5 Cookie Secret
env COOKIE_SECRET;

http {
  access_log /dev/stdout;

  keepalive_timeout 65;
  charset utf-8;

  lua_code_cache on;

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_comp_level 4;
  gzip_http_version 1.1;
  gzip_types text/plain application/json application/x-javascript application/javascript text/css text/javascript application/xml application/xml+rss image/svg+xml;
  gzip_disable "msie6";

  server_tokens off;

  server {
    listen ##PORT##;
    server_name ##SERVER_NAME##;

    resolver local=on ipv6=off;

    client_max_body_size ##CLIENT_MAX_BODY_SIZE##;
    proxy_read_timeout ##PROXY_READ_TIMEOUT##;

    # avoid HTTP 411 Length Required
    chunked_transfer_encoding on;

    location ~* \.(js|css|gif|png|jpg|jpeg|svg)$ {
      proxy_pass ##PROXY_PASS##;

      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header Upgrade		$http_upgrade;
      proxy_set_header Connection	"upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_hide_header X-Powered-By;
      proxy_hide_header Cache-Control;
      
      # Do not pass Authorization header to destination
      proxy_set_header Authorization "";

      add_header Cache-Control "public, max-age=31536000";
      expires 1y;
    }

    # @TODO
    location ~* \/manifest\.?([^\.]*?)\.(js|json)$ {
      proxy_pass ##PROXY_PASS##;

      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header Upgrade		$http_upgrade;
      proxy_set_header Connection	"upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_hide_header X-Powered-By;
      proxy_hide_header Cache-Control;
      
      # Do not pass Authorization header to destination
      add_header Cache-Control "public, max-age=60";
      proxy_set_header Authorization "";

      # Guard By
      add_header Guard-By whatwewant/openresty-oauth2.0;
    }

    location / {
      access_by_lua_file /usr/local/openresty/lualib/oauth/core/guard.lua;

      proxy_pass ##PROXY_PASS##;

      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header Upgrade		$http_upgrade;
      proxy_set_header Connection	"upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $host;
      proxy_hide_header X-Powered-By;
      
      # Do not pass Authorization header to destination
      # proxy_set_header Authorization "";
    }

    location /_oauth/ {
      access_by_lua_file /usr/local/openresty/lualib/oauth/core/authorize.lua;
    }
  }

  server {
    listen 8090;

    location /nginx_status {
      stub_status on;
      access_log off;
    }
  }

  include /etc/nginx/conf.d/*.conf;
}
